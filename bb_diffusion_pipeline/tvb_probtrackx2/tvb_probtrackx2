#!/bin/sh
#### T1 to DTI
#
# Authors: Z. Wang
#

. $BB_BIN_DIR/bb_pipeline_tools/bb_set_header

subjdir=`fsl_abspath $1`
subjdir=`echo ${subjdir} | sed 's/\/$/$/g'`
echo subjectdir is $subjdir


### save results at this folder for probtrackx
mkdir -p ${subjdir}/dMRI/probtrackx_${PARC_NAME}

### link merged files from bedpostx
ln -s ${subjdir}/dMRI/bedpostx.bedpostX/merged* ${subjdir}/dMRI/probtrackx_${PARC_NAME}

# apply previously generated inverse warp to get inflated parcellation, interface and exclude masks in DTI space
${FSLDIR}/bin/applywarp -i $subjdir/T1/labelled_GMI_${PARC_NAME} -r $subjdir/dMRI/dMRI/data_B0 -o $subjdir/dMRI/dMRI/parcellation_${PARC_NAME} --premat=$subjdir/dMRI/dMRI/transforms/T1_to_DTI.mat --interp=nn
${FSLDIR}/bin/applywarp -i $subjdir/T1/interface -r $subjdir/dMRI/dMRI/data_B0 -o $subjdir/dMRI/dMRI/interface --premat=$subjdir/dMRI/dMRI/transforms/T1_to_DTI.mat --interp=nn
${FSLDIR}/bin/applywarp -i $subjdir/T1/T1_fast/T1_brain_GM_mask -r $subjdir/dMRI/dMRI/data_B0 -o $subjdir/dMRI/probtrackx_${PARC_NAME}/exclude --premat=$subjdir/dMRI/dMRI/transforms/T1_to_DTI.mat --interp=nn



# label the interface with inflated parcellation
${AFNIDIR}/3dROIMaker -inset ${subjdir}/dMRI/dMRI/interface.nii.gz -thresh 0.1 -prefix ${subjdir}/dMRI/probtrackx_${PARC_NAME}/labelledWM -refset ${subjdir}/dMRI/dMRI/parcellation_${PARC_NAME}.nii.gz -nifti -neigh_upto_vert -dump_no_labtab

#rename labelledWMGM to include parcellation
mv ${subjdir}/dMRI/probtrackx_${PARC_NAME}/labelledWM_GM.nii.gz ${subjdir}/dMRI/probtrackx_${PARC_NAME}/labelledWM_GM_${PARC_NAME}.nii.gz

# get masks of ROIs and make a list of seeds
${BB_BIN_DIR}/bb_diffusion_pipeline/tvb_probtrackx2/tvb_createDTImasks.py -i ${subjdir}/dMRI/dMRI/interface.nii.gz -LUT ${PARC_LUT} -ri ${subjdir}/dMRI/probtrackx_${PARC_NAME}/labelledWM_GM_${PARC_NAME}.nii.gz -od ${subjdir}/dMRI/probtrackx_${PARC_NAME}


output_dir=$subjdir/dMRI/probtrackx_${PARC_NAME}/
seeds=$subjdir/dMRI/probtrackx_${PARC_NAME}/seeds.txt


DTI_mask=$subjdir/dMRI/bedpostx.bedpostX/nodif_brain_mask.nii.gz


# option 1: separate seeds into batches and run probtrackx2_gpu on each batch sequentially
if [ $PROBTRACKX_GPU == "gpu_batch" ]; then

    set +e
 
    for ((i = 1 ; i < 11 ; i++)); do
 	
        batch=batch_$i
        output_dir=$subjdir/dMRI/probtrackx_${PARC_NAME}/$batch/
 	mkdir $output_dir
 	
 
 	seeds=$subjdir/dMRI/probtrackx_${PARC_NAME}/seeds.txt
 	commands=$subjdir/dMRI/probtrackx_${PARC_NAME}/probtrackx_commands_$i.txt
 
 
 	#if [ $i -eq 0 ]; then
 
        probtrackx2_gpu --rseed=$i --network --omatrix1 --ompl --seed=${seeds} --loopcheck --onewaycondition --cthr=0.2 --nsteps=2000 --steplength=0.5 --nsamples=500 --fibthresh=0.01 --distthresh=0.0 --sampvox=0.0 --avoid=$subjdir/dMRI/probtrackx_${PARC_NAME}/exclude.nii.gz --forcedir --opd --samples=$subjdir/dMRI/bedpostx.bedpostX/merged --mask=${DTI_mask} --dir=${output_dir}

    done

    set -e

# option 2: run CPU probtrackx2 in batched mode
elif [ $PROBTRACKX_GPU == "false" ]; then

    set +e
 
    for ((i = 1 ; i < 11 ; i++)); do
 	
        batch=batch_$i
        output_dir=$subjdir/dMRI/probtrackx_${PARC_NAME}/$batch/
 	mkdir $output_dir
 	
 
 	seeds=$subjdir/dMRI/probtrackx_${PARC_NAME}/seeds.txt
 	commands=$subjdir/dMRI/probtrackx_${PARC_NAME}/probtrackx_commands_$i.txt
 
 
 	#if [ $i -eq 0 ]; then
 
        probtrackx2 --rseed=$i --network --omatrix1 --ompl --seed=${seeds} --loopcheck --onewaycondition --cthr=0.2 --nsteps=2000 --steplength=0.5 --nsamples=500 --fibthresh=0.01 --distthresh=0.0 --sampvox=0.0 --avoid=$subjdir/dMRI/probtrackx_${PARC_NAME}/exclude.nii.gz --forcedir --opd --samples=$subjdir/dMRI/bedpostx.bedpostX/merged --mask=${DTI_mask} --dir=${output_dir}

    done

    set -e

# default behaviour is to run non-batch probtrackx2_gpu 
# tell users to put "true" for this to work but really anything than than
# the above two keywords will trigger this just to be safe
else

    probtrackx2_gpu -V 2 --network --omatrix1 --ompl --seed=${seeds} --loopcheck --onewaycondition --cthr=0.2 --nsteps=2000 --steplength=0.5 --nsamples=5000 --fibthresh=0.01 --distthresh=0.0 --sampvox=0.0 --avoid=${subjdir}/dMRI/probtrackx_${PARC_NAME}/exclude.nii.gz --forcedir --opd --samples=${subjdir}/dMRI/bedpostx.bedpostX/merged --mask=${DTI_mask} --dir=${output_dir}

fi
# 
# # chmod +x $commands
# 		
# 	
# 	#else
# 
# 
# #cat <<EOF >> $commands
# #${FSLDIR}/bin/probtrackx2 --rseed=$i --network --ompl --seed=${seeds} --loopcheck --onewaycondition --cthr=0.2 --nsteps=2000 --steplength=0.5 --nsamples=500 --fibthresh=0.01 --distthresh=0.0 --sampvox=0.0 --avoid=$subjdir/dMRI/probtrackx/exclude.nii.gz --forcedir --opd --samples=$subjdir/dMRI/bedpostx.bedpostX/merged --mask=${DTI_mask} --dir=${output_dir}
# #EOF
# 
# 
# #	fi
# 
# 
# done
# 
# set -e

. $BB_BIN_DIR/bb_pipeline_tools/bb_set_footer
